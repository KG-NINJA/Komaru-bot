name: 🤖 Komaru AutoApp Generator

on:
  schedule:
    - cron: "0 * * * *"     # 毎時実行（必要に応じて調整）
  workflow_dispatch:         # 手動実行も可能

permissions:
  contents: write            # コミット権限を付与

jobs:
  generate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python (for feed parser, optional)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install feed dependencies
        run: pip install feedparser pandas

      - name: Run Komaru Feed Collector
        run: python scripts/komaru_feed.py

      # --- Codex 実行前の準備 ---
      - name: Prepare Codex home
        run: |
          mkdir -p /home/runner/work/_temp/codex_home
          chmod -R 777 /home/runner/work/_temp/codex_home

      - name: Prepare output folder
        run: |
          mkdir -p apps/latest_app
          touch apps/latest_app/README.md

      # --- Codex Cloud 自動呼び出し ---
      - name: Generate AutoApp via Codex Cloud
        id: run_codex
        uses: openai/codex-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}   # Codex Web の Responses API Key
          codex-home: /home/runner/work/_temp/codex_home
          safety-strategy: unsafe                         # Codex を信頼実行（リポジトリ操作可）
          sandbox: workspace-write
          model: gpt-4o-mini                              # 明示指定可能（任意）
          prompt: |
            Read the file specs/komaru_feed.txt.
            Identify the most recent “困りごと”.
            Generate a minimal standalone HTML/JS app that solves it.
            Save outputs into:
              - apps/latest_app/index.html
              - apps/latest_app/README.md
            The app should have:
              - blue-toned design
              - standalone client-side logic
              - readable Japanese text
              - signature "#KGNINJA AutoApp" at the bottom.

          output-file: apps/latest_app/README.md

      # --- Codex の出力を確認 ---
      - name: Show generated README preview
        if: always()
        run: |
          echo "===== Codex Output Preview ====="
          head -n 30 apps/latest_app/README.md || echo "(no README.md found)"
          echo "================================"

      # --- 自動コミット・Push ---
      - name: Commit & Push results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps/latest_app/*
          git diff --staged --quiet || git commit -m "🤖 Auto-generated Komaru App [#KGNINJA]"
          git push

      # --- GitHub Pages 用に artifacts 準備（任意） ---
      - name: Upload generated app as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: latest_autoapp
          path: apps/latest_app/
